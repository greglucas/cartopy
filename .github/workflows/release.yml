name: Build and upload to PyPI

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true

# Only build on published releases
on:
  release:
    types:
      - published

jobs:
  generate-wheels-matrix:
    name: Generate wheels matrix
    runs-on: ubuntu-latest
    outputs:
      include: ${{ steps.set-matrix.outputs.include }}
    steps:
      - uses: actions/checkout@v3
      - name: Install cibuildwheel
        run: pipx install cibuildwheel==2.13.1
      - id: set-matrix
        run: |
          MATRIX=$(
            {
              cibuildwheel --print-build-identifiers --platform linux \
              | jq -nRc '{"only": inputs, "os": "ubuntu-latest"}' \
              && cibuildwheel --print-build-identifiers --platform macos \
              | jq -nRc '{"only": inputs, "os": "macos-latest"}' \
              && cibuildwheel --print-build-identifiers --platform windows \
              | jq -nRc '{"only": inputs, "os": "windows-2019"}'
            } | jq -sc
          )
          echo "include=$MATRIX" >> $GITHUB_OUTPUT
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-*"
          # Skip 32 bit windows builds and musllinux due to lack of numpy wheels
          CIBW_SKIP: "*-win32 *-musllinux*"
          CIBW_ARCHS_MACOS: x86_64 arm64
  build_wheels:
    name: Build ${{ matrix.os }} ${{ matrix.only }}
    needs: generate-wheels-matrix
    strategy:
      matrix:
        include: ${{ fromJson(needs.generate-wheels-matrix.outputs.include) }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
        with:
          # We need the full history to generate the proper version number
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - uses: pypa/cibuildwheel@v2.13.1
        with:
          only: ${{ matrix.only }}

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # We need the full history to generate the proper version number
          fetch-depth: 0

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.11'

      - name: Build sdist
        run: |
          python -m pip install build
          # install compiles the cython *.pyx to *.cpp for us
          python -m pip install .
          python -m build --sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    environment:
      name: PyPI
      url: https://pypi.org/project/cartopy
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    runs-on: ubuntu-latest

    steps:
      - name: Download packages
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish Package
        uses: pypa/gh-action-pypi-publish@v1.8.8
